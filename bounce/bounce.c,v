head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2014.02.17.07.51.09;	author hotea;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*compile	cc bounce.c set_ticker.c -l curses -o bounce 
 */

#include<stdio.h>
#include<curses.h>
#include<signal.h>
#include<string.h>

#define MESSAGE "hello"
#define BLANK   "     "

int row;    /*current row*/
int col;    /*current column*/
int dir;    /*where we are going*/

int main()
{
  int delay;    /*bigger => slower*/
  int ndelay;   /*new delay*/
  int c;        /*user input*/
  void move_msg(int);  /*handler for timer*/

  initscr();
  crmode();
  noecho();
  clear();

  row = 10;    /*START here*/
  col = 0;
  dir = 1;     /*add 1 to row number*/
  delay =200;  /* 200ms = 0.2 seconds*/

  move(row,col); /*get info position */
  addstr(MESSAGE); /*draw message*/
  signal(SIGALRM, move_msg);
  set_ticker(delay);

  while (1) {
    ndelay = 0;
    c = getch();
    if (c == 'Q')  break;
    if (c == ' ') dir = -dir;
    if (c == 'f' && delay > 2) ndelay = delay/2;
    if (c == 's') ndelay= delay * 2;
    if (ndelay > 0)
      set_ticker(delay = ndelay);
  }
  endwin();
  return 0;
}

void move_msg(int signum)
{
  signal(SIGALRM, move_msg);
  move(row,col);
  addstr(BLANK);
  col += dir;  /*move to new column*/
  move(row, col); /* then set cursor*/
  addstr(MESSAGE); /* redo message*/
  refresh();  /* and show it*/

  /* now handle borders */
  if (dir == -1 && col<=0)
    dir = 1;
  else if(dir == 1 && col + strlen(MESSAGE)>= COLS)
    dir = -1;
}
@
