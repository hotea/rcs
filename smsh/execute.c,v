head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2014.02.26.03.30.15;	author hotea;	state Exp;
branches;
next	;


desc
@code used by smsh to execute commands
@


1.1
log
@Initial revision
@
text
@/* code used by small shell to execute commands */

#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<signal.h>
#include<sys/wait.h>

int execute(char *argv[])
{
  int pid;
  int child_info = -1;

  if (argv[0] == NULL)
    return 0;

  if ((pid = fork()) == -1)
    perror("fork");
  else if (pid == 0) {
    signal(SIGINT, SIG_DFL);
    signal(SIGQUIT, SIG_DFL);
    execvp(argv[0],argv);
    perror("cannot execute command");
    exit(1);
  }else {
    if (wait(&child_info) == -1)
      perror("wait");
  }
  return child_info;
}
@
