head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2014.01.17.17.25.38;	author hotea;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.16.16.58.54;	author hotea;	state Exp;
branches;
next	1.1;

1.1
date	2014.01.16.14.12.46;	author hotea;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@/*
 * open, read UTMP file, and show results
 */
#include<stdio.h>
#include<utmp.h>
#include<fcntl.h>
#include<unistd.h>
#include<time.h>

/*#define SHOWHOST */	/* include remote machine on output */

void showtime(long);
void show_info(struct utmp *);

int main()
{
	struct utmp *utbufp,	/*holds pointer to next rec */
		*utmp_next();	/*returns pointer to next */

	if (utmp_open(UTMP_FILE) == -1) {
		perror(UTMP_FILE);	/* UTMP_FILE is in utmp.h */
		exit(1);
	}

	while ((utbufp=utmp_next()) != ((struct utmp *)NULL))
		show_info(utbufp);
	utmp_close();
	return 0;			/* went ok */
}
/*
 * show_info()
 * displays contents of the utmp struct in human readable form
 * *note* these sizes should not be hardwired
 */
void show_info(struct utmp * utbufp)
{
	if (utbufp->ut_type != USER_PROCESS)
		return;
	printf("% -8.8s",utbufp->ut_name);	/* the logname */
	printf(" ");				/* a space */
	printf("% -8.8s",utbufp->ut_line);	/* the tty */
	printf(" ");				/* a space */
	showtime(utbufp->ut_time);		/* login time */
#ifdef SHOWHOST
	printf("(%s)",utbufp->ut_host);		/* the host */
#endif
	printf("\n");				/* new line */
}

void showtime(long timeval)
/*
 * displays time in a format fit for human consumption
 * uses ctime to build a string then picks parts out of it
 * Note: %12.12s prints a string 12 chars wide and LIMITS
 * it to 12 chars.
 */
{
	char * cp;				/*to hold address of time */
	cp = ctime(&timeval);			/*convert time to string */
	printf("%12.12s", cp+4);		/* pick 12 chars from pos 4 */
}
@


1.2
log
@suppresses empty records
formats time nicely
@
text
@d17 2
a18 2
	struct utmp utbuf;	/* read info into here */
	int	utmpfd;			/* read from this descripter */
d20 1
a20 1
	if ((utmpfd=open(UTMP_FILE, O_RDONLY)) == -1) {
d25 3
a27 3
	while (read(utmpfd, &utbuf, sizeof(utbuf)) == sizeof(utbuf))
		show_info(&utbuf);
	close(utmpfd);
@


1.1
log
@Initial revision
@
text
@d8 1
d10 3
a12 1
#define SHOWHOST	/* include remote machine on output */
d17 1
a17 1
	struct utmp current_record;	/* read info into here */
a18 1
	int 	reclen = sizeof(current_record);
d25 2
a26 2
	while (read(utmpfd, &current_record, reclen) == reclen)
		show_info(&current_record);
d35 1
a35 1
show_info(struct utmp * utbufp)
d37 2
d43 1
a43 2
	printf("%10ld",utbufp->ut_time);	/* login time */
	printf(" ");				/* a space */
d48 13
@
