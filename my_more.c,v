head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2014.01.14.11.47.43;	author hotea;	state Exp;
branches;
next	1.1;

1.1
date	2014.01.14.11.18.29;	author hotea;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@/*
 * read and print 24 lines then pause for a few special commands
 */
#include<stdio.h>
#define PAGELEN 24
#define LINELEN 512
void do_more(FILE *);
int see_more();
int main(int ac, char *av[])
{
	FILE *fp;
	if(ac == 1)
		do_more(stdin);
	else
		while (--ac)
			if ((fp=fopen(* ++av, "r")) != NULL) {
				do_more(fp);
				fclose(fp);
			} else 
				exit(1);
	return 0;
}
void do_more(FILE *fp)
/*
 * read PAGELEN lines, then call see_more() for further instructions
 */
{
	char line[LINELEN];
	int num_of_lines = 0;
	int see_more(FILE *), reply;
	FILE *fp_tty;
	fp_tty=fopen("/dev/tty","r");		/*NEW:cmd stream*/
	if (fp_tty == NULL)			/*if open fails*/
		exit(1);			/*no use in running*/
	while (fgets( line, LINELEN, fp)) {	/*more input*/
		if (num_of_lines == PAGELEN) {	/*full screen?*/
			reply = see_more(fp_tty);	/*y:ask user*/
			if (reply == 0)		/*n:done*/
				break;
			num_of_lines -= reply;	/*reset count*/
		}
		if (fputs(line, stdout) == EOF)	/*show line*/
			exit(1);		/*or die*/
		num_of_lines++;			/*count it*/
	}
}
int see_more(FILE *cmd)				/*NEW:accepts arg*/
/*
 * print message, wait for response, return # of lines to advance
 * q means no, space means yes, CR means one line
 */
{
	int c;
	printf("\033[7m more? \033[m");		/*reverse on a vt100 */
	while ((c=getc(cmd))!=EOF) {		/*get response	*/
		if (c == 'q')			/*q->N*/
			return 0;
		if (c == ' ')			/*' '=>next page*/
			return PAGELEN;		/*how many to show */
		if (c == '\n')			/*Enter key => 1 line */
			return 1;
	}
	return 0;
}
@


1.1
log
@Initial revision
@
text
@d30 5
a34 1
	int see_more(), reply;
d37 1
a37 1
			reply = see_more();	/*y:ask user*/
d47 1
a47 1
int see_more()
d55 1
a55 1
	while ((c=getchar())!=EOF) {		/*get response	*/
@
